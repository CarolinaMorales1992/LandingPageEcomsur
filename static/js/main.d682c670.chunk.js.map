{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","capital","setCapital","bandera","setBandera","nombre","setNombre","region","setRegion","paisesLimitrofes","setPaisesLimitrofes","lengua","setLengua","moneda","setMoneda","className","id","type","placeholder","onClick","e","preventDefault","searchButton","document","getElementById","value","get","then","response","data","flag","name","borders","map","border","languages","currencies","symbol","style","display","width","height","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"mOAsDeA,MAhDf,WACE,MAA8BC,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACA,EAA4BN,mBAAS,IAArC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAgDR,mBAAS,IAAzD,mBAAOS,EAAP,KAAyBC,EAAzB,KACA,EAA4BV,mBAAS,IAArC,mBAAOW,EAAP,KAAeC,EAAf,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KAoBA,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAMC,GAAG,OAAT,UACE,uBAAOC,KAAK,SAASD,GAAG,cAAcE,YAAY,cAClD,wBAAQF,GAAG,SAASG,QAtBJ,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAeC,SAASC,eAAe,eAAeC,MAC1DC,cAAI,yCAA2CJ,GAC9CK,MAAK,SAAAC,GACJ1B,EAAW0B,EAASC,KAAK,GAAG5B,SAC5BG,EAAWwB,EAASC,KAAK,GAAGC,MAC5BxB,EAAUsB,EAASC,KAAK,GAAGE,MAC3BvB,EAAUoB,EAASC,KAAK,GAAGtB,QAC3BG,EAAoBkB,EAASC,KAAK,GAAGG,QAAQC,KAAI,SAAAC,GAAM,OAAIA,EAAS,SACpEtB,EAAUgB,EAASC,KAAK,GAAGM,UAAU,GAAGJ,MACxCjB,EAAUc,EAASC,KAAK,GAAGO,WAAW,GAAGL,KAAO,IAAMH,EAASC,KAAK,GAAGO,WAAW,GAAGC,WAIvFd,SAASC,eAAe,OAAOc,MAAMC,QAAU,UAO3C,uBAGF,sBAAKvB,GAAG,OAAR,UACE,4CAAef,KACf,4CAAc,qBAAKe,GAAG,MAAMwB,MAAM,KAAKC,OAAO,KAAKC,IAAKvC,OACxD,2CAAcE,KACd,8CAAcE,KACd,4DAAyBE,KACzB,2CAAcE,KACd,kEAAkCE,YCnC3B8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF9B,SAASC,eAAe,SAM1BmB,M","file":"static/js/main.d682c670.chunk.js","sourcesContent":["import './App.css';\nimport { get } from 'axios';\nimport React, {useState} from 'react';\n\n\n\nfunction App() {\n  const [capital, setCapital] = useState('');\n  const [bandera, setBandera] = useState('');\n  const [nombre, setNombre] = useState('');\n  const [region, setRegion] = useState('');\n  const [paisesLimitrofes, setPaisesLimitrofes] = useState('');\n  const [lengua, setLengua] = useState('');\n  const [moneda, setMoneda] = useState('');\n\n  const searchCountry = (e) => {\n    e.preventDefault();\n    let searchButton = document.getElementById('inputSearch').value;\n    get('https://restcountries.eu/rest/v2/name/' + searchButton)\n    .then(response => {\n      setCapital(response.data[0].capital);\n      setBandera(response.data[0].flag);\n      setNombre(response.data[0].name);\n      setRegion(response.data[0].region);\n      setPaisesLimitrofes(response.data[0].borders.map(border => border + ', '));\n      setLengua(response.data[0].languages[0].name);\n      setMoneda(response.data[0].currencies[0].name + ' ' + response.data[0].currencies[0].symbol);\n\n      \n    });\n    document.getElementById('img').style.display = 'inline';\n  }\n  \n  return (\n    <div className=\"App\">\n      <form id=\"form\"> \n        <input type=\"search\" id=\"inputSearch\" placeholder=\"Search...\"/>\n        <button id=\"search\" onClick = {searchCountry}>Search</button>\n      </form>\n\n      <div id=\"data\">\n        <div>Capital: {capital}</div>\n        <div>Bandera: <img id='img' width=\"30\" height=\"15\" src={bandera}></img></div>\n        <div>Nombre: {nombre}</div>\n        <div>Región: {region}</div>\n        <div>Países limítrofes: {paisesLimitrofes}</div>\n        <div>Lengua: {lengua}</div>\n        <div>Nombre y símbolo de moneda: {moneda}</div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}